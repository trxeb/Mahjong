{"ast":null,"code":"var _jsxFileName = \"/Users/angyi/Documents/GitHub/Mahjong/client/src/pages/GameMasterPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { doc, onSnapshot, updateDoc, arrayUnion, getDoc, deleteDoc } from 'firebase/firestore';\nimport { db, auth } from '../firebase-config';\nimport { onAuthStateChanged } from 'firebase/auth';\nimport { Container, Row, Col, Button, Card, CardBody, Dropdown, DropdownToggle, DropdownMenu, DropdownItem, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCrown, faSync, faStopCircle, faPlayCircle, faTrophy } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GameMasterPage = () => {\n  _s();\n  const {\n    roomCode\n  } = useParams();\n  const navigate = useNavigate();\n  const [players, setPlayers] = useState([]);\n  const [currentUser, setCurrentUser] = useState(null);\n  const [userWind, setUserWind] = useState('');\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n  const [roomExists, setRoomExists] = useState(true);\n  const [roomData, setRoomData] = useState(null);\n  const [highestScore, setHighestScore] = useState(-Infinity);\n  const [mostWins, setMostWins] = useState(-1);\n  const [confirmEndModalOpen, setConfirmEndModalOpen] = useState(false);\n  const [winnerModalOpen, setWinnerModalOpen] = useState(false);\n  const [gameWinner, setGameWinner] = useState(null);\n  const winds = ['East (東)', 'South (南)', 'West (西)', 'North (北)'];\n\n  // Effect to save the last visited room\n  useEffect(() => {\n    if (roomCode) {\n      localStorage.setItem('lastRoomCode', roomCode);\n    }\n  }, [roomCode]);\n  useEffect(() => {\n    const unsubscribeAuth = onAuthStateChanged(auth, async user => {\n      if (user) {\n        const userDocRef = doc(db, \"users\", user.uid);\n        const userDocSnap = await getDoc(userDocRef);\n        if (userDocSnap.exists()) {\n          setCurrentUser({\n            uid: user.uid,\n            ...userDocSnap.data()\n          });\n        } else {\n          setCurrentUser({\n            uid: user.uid,\n            username: user.email\n          });\n        }\n      } else {\n        setCurrentUser(null);\n      }\n    });\n    return () => unsubscribeAuth();\n  }, []);\n  useEffect(() => {\n    if (!currentUser || !roomCode) return;\n    const roomRef = doc(db, 'rooms', roomCode);\n    const unsubscribeRoom = onSnapshot(roomRef, docSnap => {\n      if (docSnap.exists()) {\n        setRoomExists(true);\n        const currentRoomData = docSnap.data();\n        setRoomData(currentRoomData);\n        const currentPlayers = currentRoomData.players || [];\n        setPlayers(currentPlayers);\n        if (currentPlayers.length > 0) {\n          const scores = currentPlayers.map(p => p.score);\n          setHighestScore(Math.max(...scores));\n          const wins = currentPlayers.map(p => p.gamesWon || 0);\n          const maxWins = Math.max(...wins);\n          setMostWins(maxWins > 0 ? maxWins : -1);\n        }\n        const playerInRoom = currentPlayers.find(p => p.uid === currentUser.uid);\n        if (playerInRoom) {\n          setUserWind(playerInRoom.wind);\n        } else if (currentPlayers.length < 4) {\n          const newPlayer = {\n            uid: currentUser.uid,\n            name: currentUser.username,\n            score: 0,\n            wind: ''\n          };\n          updateDoc(roomRef, {\n            players: arrayUnion(newPlayer)\n          });\n        }\n        if (currentPlayers.length === 4 && currentRoomData.gameMaster === currentUser.uid) {\n          const playersWithoutWind = currentPlayers.filter(p => !p.wind);\n          if (playersWithoutWind.length === 1) {\n            const takenWinds = currentPlayers.map(p => p.wind).filter(Boolean);\n            const availableWinds = winds.filter(w => !takenWinds.includes(w));\n            if (availableWinds.length === 1) {\n              const lastWind = availableWinds[0];\n              const playerToUpdateIndex = currentPlayers.findIndex(p => !p.wind);\n              const updatedPlayers = [...currentPlayers];\n              updatedPlayers[playerToUpdateIndex].wind = lastWind;\n              updateDoc(roomRef, {\n                players: updatedPlayers\n              });\n            }\n          }\n        }\n      } else {\n        setRoomExists(false);\n      }\n    });\n    return () => unsubscribeRoom();\n  }, [roomCode, currentUser === null || currentUser === void 0 ? void 0 : currentUser.uid]);\n  const handleWindSelection = async wind => {\n    if (!currentUser) return;\n    const roomRef = doc(db, 'rooms', roomCode);\n    const playerIndex = players.findIndex(p => p.uid === currentUser.uid);\n    if (playerIndex !== -1) {\n      const updatedPlayers = [...players];\n      updatedPlayers[playerIndex].wind = wind;\n      await updateDoc(roomRef, {\n        players: updatedPlayers\n      });\n      setUserWind(wind);\n    }\n  };\n  const handleEndGame = async () => {\n    toggleConfirmEndModal(); // Close confirmation modal\n\n    if (players.length > 0) {\n      const winner = players.reduce((prev, current) => prev.score > current.score ? prev : current);\n      setGameWinner(winner);\n    }\n    const roomRef = doc(db, 'rooms', roomCode);\n    try {\n      await deleteDoc(roomRef);\n      console.log(\"Room successfully deleted.\");\n    } catch (error) {\n      console.error(\"Error deleting room: \", error);\n    }\n    setWinnerModalOpen(true);\n  };\n  const handleCloseWinnerModalAndRedirect = () => {\n    setWinnerModalOpen(false);\n    navigate('/');\n  };\n  const handleStartRound = () => {\n    navigate(`/records/${roomCode}`);\n  };\n  const toggleDropdown = () => setDropdownOpen(prevState => !prevState);\n  const toggleConfirmEndModal = () => setConfirmEndModalOpen(!confirmEndModalOpen);\n  const canStartGame = players.length === 4 && players.every(p => p.wind);\n  const isPlayerInRoom = players.some(p => p.uid === (currentUser === null || currentUser === void 0 ? void 0 : currentUser.uid));\n  const availableWinds = winds.filter(w => !players.some(p => p.wind === w));\n  if (!roomExists) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gm-background\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        className: \"py-5 text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Room Not Found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"The room with code \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: roomCode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 43\n          }, this), \" does not exist or has been closed.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gm-background\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: \"py-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"gm-header\",\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faCrown\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 43\n        }, this), \" Game Master\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"room-code-display my-4\",\n        children: [\"Room Code: \", roomCode]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 8,\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mb-3\",\n            children: \"Players in Room\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: [players.map(player => /*#__PURE__*/_jsxDEV(Col, {\n              md: 6,\n              className: \"mb-4\",\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                className: `player-score-card h-100 ${player.score === highestScore ? 'highlight' : ''}`,\n                children: /*#__PURE__*/_jsxDEV(CardBody, {\n                  className: \"text-center d-flex flex-column justify-content-center\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"wind-indicator\",\n                    children: player.wind || 'Choosing...'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 189,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"player-name mt-2\",\n                    children: player.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 190,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"player-score my-1\",\n                    children: [player.score > 0 ? '+' : '', player.score]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 191,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                    className: \"text-muted mt-auto\",\n                    children: [\"Wind: \", player.wind.split(' ')[0], \" | Games Won: \", player.gamesWon || 0, player.gamesWon === mostWins && mostWins !== -1 && /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                      icon: faTrophy,\n                      className: \"ms-2 text-warning\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 194,\n                      columnNumber: 101\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 192,\n                    columnNumber: 46\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 38\n              }, this)\n            }, player.uid, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 33\n            }, this)), players.length < 4 && Array.from({\n              length: 4 - players.length\n            }).map((_, index) => /*#__PURE__*/_jsxDEV(Col, {\n              md: 6,\n              className: \"mb-4\",\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                className: \"player-score-card h-100\",\n                children: /*#__PURE__*/_jsxDEV(CardBody, {\n                  className: \"text-center d-flex align-items-center justify-content-center\",\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-muted\",\n                    children: \"Waiting for more players...\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 204,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 37\n              }, this)\n            }, `placeholder-${index}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 4,\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mb-3\",\n            children: \"Game Controls\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 25\n          }, this), isPlayerInRoom && !userWind && /*#__PURE__*/_jsxDEV(Dropdown, {\n            isOpen: dropdownOpen,\n            toggle: toggleDropdown,\n            className: \"w-100 mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(DropdownToggle, {\n              caret: true,\n              children: \"Choose Your Wind\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(DropdownMenu, {\n              children: [availableWinds.map(wind => /*#__PURE__*/_jsxDEV(DropdownItem, {\n                onClick: () => handleWindSelection(wind),\n                children: wind\n              }, wind, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 42\n              }, this)), availableWinds.length === 0 && /*#__PURE__*/_jsxDEV(DropdownItem, {\n                disabled: true,\n                children: \"All winds taken\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 69\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"w-100 mb-2 gm-btn\",\n            disabled: !canStartGame,\n            onClick: handleStartRound,\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faPlayCircle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 29\n            }, this), \" Start New Round\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"w-100 mb-2 gm-btn-alt\",\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faSync\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 29\n            }, this), \" Reset All Scores\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 25\n          }, this), (roomData === null || roomData === void 0 ? void 0 : roomData.gameMaster) === (currentUser === null || currentUser === void 0 ? void 0 : currentUser.uid) && /*#__PURE__*/_jsxDEV(Button, {\n            color: \"danger\",\n            className: \"w-100 gm-btn-danger\",\n            onClick: toggleConfirmEndModal,\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faStopCircle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 33\n            }, this), \" End Game\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: confirmEndModalOpen,\n        toggle: toggleConfirmEndModal,\n        centered: true,\n        children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n          toggle: toggleConfirmEndModal,\n          children: \"Confirm End Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n          children: \"Are you sure you want to end this game? The room will be closed and all data will be lost. This action cannot be undone.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            color: \"danger\",\n            onClick: handleEndGame,\n            children: \"Confirm End Game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 25\n          }, this), ' ', /*#__PURE__*/_jsxDEV(Button, {\n            color: \"secondary\",\n            onClick: toggleConfirmEndModal,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: winnerModalOpen,\n        toggle: handleCloseWinnerModalAndRedirect,\n        centered: true,\n        children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n          children: \"Game Over!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n          className: \"text-center\",\n          children: gameWinner ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: [\"\\uD83C\\uDF89 The Winner is \", gameWinner.name, \"! \\uD83C\\uDF89\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"lead\",\n              children: [\"Final Score: \", gameWinner.score]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"The game has ended.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            onClick: handleCloseWinnerModalAndRedirect,\n            children: \"Back to Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 9\n  }, this);\n};\n_s(GameMasterPage, \"iwKQ24AbKghB6kr0CY3HmwWXUA4=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = GameMasterPage;\nexport default GameMasterPage;\nvar _c;\n$RefreshReg$(_c, \"GameMasterPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","doc","onSnapshot","updateDoc","arrayUnion","getDoc","deleteDoc","db","auth","onAuthStateChanged","Container","Row","Col","Button","Card","CardBody","Dropdown","DropdownToggle","DropdownMenu","DropdownItem","Modal","ModalHeader","ModalBody","ModalFooter","FontAwesomeIcon","faCrown","faSync","faStopCircle","faPlayCircle","faTrophy","jsxDEV","_jsxDEV","Fragment","_Fragment","GameMasterPage","_s","roomCode","navigate","players","setPlayers","currentUser","setCurrentUser","userWind","setUserWind","dropdownOpen","setDropdownOpen","roomExists","setRoomExists","roomData","setRoomData","highestScore","setHighestScore","Infinity","mostWins","setMostWins","confirmEndModalOpen","setConfirmEndModalOpen","winnerModalOpen","setWinnerModalOpen","gameWinner","setGameWinner","winds","localStorage","setItem","unsubscribeAuth","user","userDocRef","uid","userDocSnap","exists","data","username","email","roomRef","unsubscribeRoom","docSnap","currentRoomData","currentPlayers","length","scores","map","p","score","Math","max","wins","gamesWon","maxWins","playerInRoom","find","wind","newPlayer","name","gameMaster","playersWithoutWind","filter","takenWinds","Boolean","availableWinds","w","includes","lastWind","playerToUpdateIndex","findIndex","updatedPlayers","handleWindSelection","playerIndex","handleEndGame","toggleConfirmEndModal","winner","reduce","prev","current","console","log","error","handleCloseWinnerModalAndRedirect","handleStartRound","toggleDropdown","prevState","canStartGame","every","isPlayerInRoom","some","className","children","fileName","_jsxFileName","lineNumber","columnNumber","icon","md","player","split","Array","from","_","index","isOpen","toggle","caret","onClick","disabled","color","centered","_c","$RefreshReg$"],"sources":["/Users/angyi/Documents/GitHub/Mahjong/client/src/pages/GameMasterPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { doc, onSnapshot, updateDoc, arrayUnion, getDoc, deleteDoc } from 'firebase/firestore';\nimport { db, auth } from '../firebase-config';\nimport { onAuthStateChanged } from 'firebase/auth';\nimport { Container, Row, Col, Button, Card, CardBody, Dropdown, DropdownToggle, DropdownMenu, DropdownItem, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCrown, faSync, faStopCircle, faPlayCircle, faTrophy } from '@fortawesome/free-solid-svg-icons';\n\nconst GameMasterPage = () => {\n    const { roomCode } = useParams();\n    const navigate = useNavigate();\n    const [players, setPlayers] = useState([]);\n    const [currentUser, setCurrentUser] = useState(null);\n    const [userWind, setUserWind] = useState('');\n    const [dropdownOpen, setDropdownOpen] = useState(false);\n    const [roomExists, setRoomExists] = useState(true);\n    const [roomData, setRoomData] = useState(null);\n    const [highestScore, setHighestScore] = useState(-Infinity);\n    const [mostWins, setMostWins] = useState(-1);\n    const [confirmEndModalOpen, setConfirmEndModalOpen] = useState(false);\n    const [winnerModalOpen, setWinnerModalOpen] = useState(false);\n    const [gameWinner, setGameWinner] = useState(null);\n\n    const winds = ['East (東)', 'South (南)', 'West (西)', 'North (北)'];\n\n    // Effect to save the last visited room\n    useEffect(() => {\n        if (roomCode) {\n            localStorage.setItem('lastRoomCode', roomCode);\n        }\n    }, [roomCode]);\n\n    useEffect(() => {\n        const unsubscribeAuth = onAuthStateChanged(auth, async (user) => {\n            if (user) {\n                const userDocRef = doc(db, \"users\", user.uid);\n                const userDocSnap = await getDoc(userDocRef);\n                if (userDocSnap.exists()) {\n                    setCurrentUser({ uid: user.uid, ...userDocSnap.data() });\n                } else {\n                    setCurrentUser({ uid: user.uid, username: user.email });\n                }\n            } else {\n                setCurrentUser(null);\n            }\n        });\n        return () => unsubscribeAuth();\n    }, []);\n\n    useEffect(() => {\n        if (!currentUser || !roomCode) return;\n\n        const roomRef = doc(db, 'rooms', roomCode);\n\n        const unsubscribeRoom = onSnapshot(roomRef, (docSnap) => {\n            if (docSnap.exists()) {\n                setRoomExists(true);\n                const currentRoomData = docSnap.data();\n                setRoomData(currentRoomData);\n                const currentPlayers = currentRoomData.players || [];\n                setPlayers(currentPlayers);\n\n                if (currentPlayers.length > 0) {\n                    const scores = currentPlayers.map(p => p.score);\n                    setHighestScore(Math.max(...scores));\n                    \n                    const wins = currentPlayers.map(p => p.gamesWon || 0);\n                    const maxWins = Math.max(...wins);\n                    setMostWins(maxWins > 0 ? maxWins : -1);\n                }\n\n                const playerInRoom = currentPlayers.find(p => p.uid === currentUser.uid);\n\n                if (playerInRoom) {\n                    setUserWind(playerInRoom.wind);\n                } else if (currentPlayers.length < 4) {\n                    const newPlayer = {\n                        uid: currentUser.uid,\n                        name: currentUser.username,\n                        score: 0,\n                        wind: ''\n                    };\n                    updateDoc(roomRef, {\n                        players: arrayUnion(newPlayer)\n                    });\n                }\n\n                if (currentPlayers.length === 4 && currentRoomData.gameMaster === currentUser.uid) {\n                    const playersWithoutWind = currentPlayers.filter(p => !p.wind);\n                    if (playersWithoutWind.length === 1) {\n                        const takenWinds = currentPlayers.map(p => p.wind).filter(Boolean);\n                        const availableWinds = winds.filter(w => !takenWinds.includes(w));\n                        if (availableWinds.length === 1) {\n                            const lastWind = availableWinds[0];\n                            const playerToUpdateIndex = currentPlayers.findIndex(p => !p.wind);\n                            \n                            const updatedPlayers = [...currentPlayers];\n                            updatedPlayers[playerToUpdateIndex].wind = lastWind;\n                            \n                            updateDoc(roomRef, { players: updatedPlayers });\n                        }\n                    }\n                }\n            } else {\n                setRoomExists(false);\n            }\n        });\n\n        return () => unsubscribeRoom();\n\n    }, [roomCode, currentUser?.uid]);\n    \n    const handleWindSelection = async (wind) => {\n        if (!currentUser) return;\n        const roomRef = doc(db, 'rooms', roomCode);\n        const playerIndex = players.findIndex(p => p.uid === currentUser.uid);\n\n        if (playerIndex !== -1) {\n            const updatedPlayers = [...players];\n            updatedPlayers[playerIndex].wind = wind;\n            await updateDoc(roomRef, { players: updatedPlayers });\n            setUserWind(wind);\n        }\n    };\n\n    const handleEndGame = async () => {\n        toggleConfirmEndModal(); // Close confirmation modal\n    \n        if (players.length > 0) {\n            const winner = players.reduce((prev, current) => (prev.score > current.score) ? prev : current);\n            setGameWinner(winner);\n        }\n    \n        const roomRef = doc(db, 'rooms', roomCode);\n        try {\n            await deleteDoc(roomRef);\n            console.log(\"Room successfully deleted.\");\n        } catch (error) {\n            console.error(\"Error deleting room: \", error);\n        }\n        \n        setWinnerModalOpen(true);\n    };\n\n    const handleCloseWinnerModalAndRedirect = () => {\n        setWinnerModalOpen(false);\n        navigate('/');\n    };\n\n    const handleStartRound = () => {\n        navigate(`/records/${roomCode}`);\n    };\n    \n    const toggleDropdown = () => setDropdownOpen(prevState => !prevState);\n    const toggleConfirmEndModal = () => setConfirmEndModalOpen(!confirmEndModalOpen);\n\n    const canStartGame = players.length === 4 && players.every(p => p.wind);\n    const isPlayerInRoom = players.some(p => p.uid === currentUser?.uid);\n    const availableWinds = winds.filter(w => !players.some(p => p.wind === w));\n\n    if (!roomExists) {\n        return (\n            <div className=\"gm-background\">\n                <Container className=\"py-5 text-center\">\n                    <h2>Room Not Found</h2>\n                    <p>The room with code <strong>{roomCode}</strong> does not exist or has been closed.</p>\n                </Container>\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"gm-background\">\n            <Container className=\"py-5\">\n                <h2 className=\"gm-header\"><FontAwesomeIcon icon={faCrown} /> Game Master</h2>\n                <div className=\"room-code-display my-4\">\n                    Room Code: {roomCode}\n                </div>\n\n                <Row>\n                    <Col md={8}>\n                        <h4 className=\"mb-3\">Players in Room</h4>\n                        <Row>\n                            {players.map(player => (\n                                <Col md={6} key={player.uid} className=\"mb-4\">\n                                     <Card className={`player-score-card h-100 ${player.score === highestScore ? 'highlight' : ''}`}>\n                                        <CardBody className=\"text-center d-flex flex-column justify-content-center\">\n                                            <div className=\"wind-indicator\">{player.wind || 'Choosing...'}</div>\n                                            <div className=\"player-name mt-2\">{player.name}</div>\n                                            <div className=\"player-score my-1\">{player.score > 0 ? '+' : ''}{player.score}</div>\n                                             <small className=\"text-muted mt-auto\">\n                                                Wind: {player.wind.split(' ')[0]} | Games Won: {player.gamesWon || 0}\n                                                {player.gamesWon === mostWins && mostWins !== -1 && <FontAwesomeIcon icon={faTrophy} className=\"ms-2 text-warning\" />}\n                                            </small>\n                                        </CardBody>\n                                    </Card>\n                                </Col>\n                            ))}\n                             {players.length < 4 && Array.from({ length: 4 - players.length }).map((_, index) => (\n                                <Col md={6} key={`placeholder-${index}`} className=\"mb-4\">\n                                    <Card className=\"player-score-card h-100\">\n                                        <CardBody className=\"text-center d-flex align-items-center justify-content-center\">\n                                            <p className=\"text-muted\">Waiting for more players...</p>\n                                        </CardBody>\n                                    </Card>\n                                </Col>\n                             ))}\n                        </Row>\n                    </Col>\n                    <Col md={4}>\n                        <h4 className=\"mb-3\">Game Controls</h4>\n                        {isPlayerInRoom && !userWind && (\n                            <Dropdown isOpen={dropdownOpen} toggle={toggleDropdown} className=\"w-100 mb-3\">\n                                <DropdownToggle caret>\n                                    Choose Your Wind\n                                </DropdownToggle>\n                                <DropdownMenu>\n                                    {availableWinds.map(wind => (\n                                         <DropdownItem key={wind} onClick={() => handleWindSelection(wind)}>{wind}</DropdownItem>\n                                    ))}\n                                    {availableWinds.length === 0 && <DropdownItem disabled>All winds taken</DropdownItem>}\n                                </DropdownMenu>\n                            </Dropdown>\n                        )}\n                        <Button className=\"w-100 mb-2 gm-btn\" disabled={!canStartGame} onClick={handleStartRound}>\n                            <FontAwesomeIcon icon={faPlayCircle} /> Start New Round\n                        </Button>\n                        <Button className=\"w-100 mb-2 gm-btn-alt\">\n                            <FontAwesomeIcon icon={faSync} /> Reset All Scores\n                        </Button>\n                        {roomData?.gameMaster === currentUser?.uid && (\n                            <Button color=\"danger\" className=\"w-100 gm-btn-danger\" onClick={toggleConfirmEndModal}>\n                                <FontAwesomeIcon icon={faStopCircle} /> End Game\n                            </Button>\n                        )}\n                    </Col>\n                </Row>\n                <Modal isOpen={confirmEndModalOpen} toggle={toggleConfirmEndModal} centered>\n                    <ModalHeader toggle={toggleConfirmEndModal}>Confirm End Game</ModalHeader>\n                    <ModalBody>\n                        Are you sure you want to end this game? The room will be closed and all data will be lost. This action cannot be undone.\n                    </ModalBody>\n                    <ModalFooter>\n                        <Button color=\"danger\" onClick={handleEndGame}>Confirm End Game</Button>{' '}\n                        <Button color=\"secondary\" onClick={toggleConfirmEndModal}>Cancel</Button>\n                    </ModalFooter>\n                </Modal>\n\n                <Modal isOpen={winnerModalOpen} toggle={handleCloseWinnerModalAndRedirect} centered>\n                    <ModalHeader>Game Over!</ModalHeader>\n                    <ModalBody className=\"text-center\">\n                        {gameWinner ? (\n                            <>\n                                <h4>🎉 The Winner is {gameWinner.name}! 🎉</h4>\n                                <p className=\"lead\">Final Score: {gameWinner.score}</p>\n                            </>\n                        ) : (\n                            <p>The game has ended.</p>\n                        )}\n                    </ModalBody>\n                    <ModalFooter>\n                        <Button color=\"primary\" onClick={handleCloseWinnerModalAndRedirect}>Back to Home</Button>\n                    </ModalFooter>\n                </Modal>\n            </Container>\n        </div>\n    );\n};\n\nexport default GameMasterPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}