{"ast":null,"code":"var _jsxFileName = \"/Users/angyi/Documents/GitHub/Mahjong/client/src/pages/GameMasterPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { doc, onSnapshot, updateDoc, arrayUnion, getDoc } from 'firebase/firestore';\nimport { db, auth } from '../firebase-config';\nimport { onAuthStateChanged } from 'firebase/auth';\nimport { Container, Row, Col, Button, Card, CardBody, Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCrown, faSync, faStopCircle, faPlayCircle } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameMasterPage = () => {\n  _s();\n  const {\n    roomCode\n  } = useParams();\n  const [players, setPlayers] = useState([]);\n  const [currentUser, setCurrentUser] = useState(null);\n  const [userWind, setUserWind] = useState('');\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n  const [roomExists, setRoomExists] = useState(true);\n  const winds = ['East (東)', 'South (南)', 'West (西)', 'North (北)'];\n\n  // Effect to save the last visited room\n  useEffect(() => {\n    if (roomCode) {\n      localStorage.setItem('lastRoomCode', roomCode);\n    }\n  }, [roomCode]);\n  useEffect(() => {\n    const unsubscribeAuth = onAuthStateChanged(auth, async user => {\n      if (user) {\n        const userDocRef = doc(db, \"users\", user.uid);\n        const userDocSnap = await getDoc(userDocRef);\n        if (userDocSnap.exists()) {\n          setCurrentUser({\n            uid: user.uid,\n            ...userDocSnap.data()\n          });\n        } else {\n          setCurrentUser({\n            uid: user.uid,\n            username: user.email\n          });\n        }\n      } else {\n        setCurrentUser(null);\n      }\n    });\n    return () => unsubscribeAuth();\n  }, []);\n  useEffect(() => {\n    if (!currentUser || !roomCode) return;\n    const roomRef = doc(db, 'rooms', roomCode);\n    const unsubscribeRoom = onSnapshot(roomRef, docSnap => {\n      if (docSnap.exists()) {\n        setRoomExists(true);\n        const roomData = docSnap.data();\n        const currentPlayers = roomData.players || [];\n        setPlayers(currentPlayers);\n        const playerInRoom = currentPlayers.find(p => p.uid === currentUser.uid);\n        if (playerInRoom) {\n          setUserWind(playerInRoom.wind);\n        } else if (currentPlayers.length < 4) {\n          const newPlayer = {\n            uid: currentUser.uid,\n            name: currentUser.username,\n            score: 0,\n            wind: ''\n          };\n          updateDoc(roomRef, {\n            players: arrayUnion(newPlayer)\n          });\n        }\n        if (currentPlayers.length === 4 && roomData.gameMaster === currentUser.uid) {\n          const playersWithoutWind = currentPlayers.filter(p => !p.wind);\n          if (playersWithoutWind.length === 1) {\n            const takenWinds = currentPlayers.map(p => p.wind).filter(Boolean);\n            const availableWinds = winds.filter(w => !takenWinds.includes(w));\n            if (availableWinds.length === 1) {\n              const lastWind = availableWinds[0];\n              const playerToUpdateIndex = currentPlayers.findIndex(p => !p.wind);\n              const updatedPlayers = [...currentPlayers];\n              updatedPlayers[playerToUpdateIndex].wind = lastWind;\n              updateDoc(roomRef, {\n                players: updatedPlayers\n              });\n            }\n          }\n        }\n      } else {\n        setRoomExists(false);\n      }\n    });\n    return () => unsubscribeRoom();\n  }, [roomCode, currentUser]);\n  const handleWindSelection = async wind => {\n    if (!currentUser) return;\n    const roomRef = doc(db, 'rooms', roomCode);\n    const playerIndex = players.findIndex(p => p.uid === currentUser.uid);\n    if (playerIndex !== -1) {\n      const updatedPlayers = [...players];\n      updatedPlayers[playerIndex].wind = wind;\n      await updateDoc(roomRef, {\n        players: updatedPlayers\n      });\n      setUserWind(wind);\n    }\n  };\n  const toggleDropdown = () => setDropdownOpen(prevState => !prevState);\n  const canStartGame = players.length === 4 && players.every(p => p.wind);\n  const isPlayerInRoom = players.some(p => p.uid === (currentUser === null || currentUser === void 0 ? void 0 : currentUser.uid));\n  const availableWinds = winds.filter(w => !players.some(p => p.wind === w));\n  if (!roomExists) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gm-background\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        className: \"py-5 text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Room Not Found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"The room with code \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: roomCode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 43\n          }, this), \" does not exist or has been closed.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gm-background\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: \"py-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"gm-header\",\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faCrown\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 43\n        }, this), \" Game Master\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"room-code-display my-4\",\n        children: [\"Room Code: \", roomCode]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 8,\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mb-3\",\n            children: \"Players in Room\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }, this), players.map(player => /*#__PURE__*/_jsxDEV(Card, {\n            className: \"player-card mb-3\",\n            children: /*#__PURE__*/_jsxDEV(CardBody, {\n              className: \"text-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"player-card-wind\",\n                children: player.wind || 'Choosing...'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"player-card-name\",\n                children: player.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"player-card-score\",\n                children: player.score\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 33\n            }, this)\n          }, player.uid, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 29\n          }, this)), players.length < 4 && /*#__PURE__*/_jsxDEV(Card, {\n            className: \"player-card mb-3\",\n            children: /*#__PURE__*/_jsxDEV(CardBody, {\n              className: \"text-center d-flex align-items-center justify-content-center\",\n              style: {\n                minHeight: '110px'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-muted\",\n                children: \"Waiting for more players...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 4,\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mb-3\",\n            children: \"Game Controls\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 25\n          }, this), isPlayerInRoom && !userWind && /*#__PURE__*/_jsxDEV(Dropdown, {\n            isOpen: dropdownOpen,\n            toggle: toggleDropdown,\n            className: \"w-100 mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(DropdownToggle, {\n              caret: true,\n              children: \"Choose Your Wind\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(DropdownMenu, {\n              children: [availableWinds.map(wind => /*#__PURE__*/_jsxDEV(DropdownItem, {\n                onClick: () => handleWindSelection(wind),\n                children: wind\n              }, wind, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 42\n              }, this)), availableWinds.length === 0 && /*#__PURE__*/_jsxDEV(DropdownItem, {\n                disabled: true,\n                children: \"All winds taken\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 69\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"w-100 mb-2 gm-btn\",\n            disabled: !canStartGame,\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faPlayCircle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 29\n            }, this), \" Start New Round\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"w-100 mb-2 gm-btn-alt\",\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faSync\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 29\n            }, this), \" Reset All Scores\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"danger\",\n            className: \"w-100 gm-btn-danger\",\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faStopCircle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 29\n            }, this), \" End Game\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 9\n  }, this);\n};\n_s(GameMasterPage, \"pSJuZc+aBtvJpcBYJH4rChitBqg=\", false, function () {\n  return [useParams];\n});\n_c = GameMasterPage;\nexport default GameMasterPage;\nvar _c;\n$RefreshReg$(_c, \"GameMasterPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","doc","onSnapshot","updateDoc","arrayUnion","getDoc","db","auth","onAuthStateChanged","Container","Row","Col","Button","Card","CardBody","Dropdown","DropdownToggle","DropdownMenu","DropdownItem","FontAwesomeIcon","faCrown","faSync","faStopCircle","faPlayCircle","jsxDEV","_jsxDEV","GameMasterPage","_s","roomCode","players","setPlayers","currentUser","setCurrentUser","userWind","setUserWind","dropdownOpen","setDropdownOpen","roomExists","setRoomExists","winds","localStorage","setItem","unsubscribeAuth","user","userDocRef","uid","userDocSnap","exists","data","username","email","roomRef","unsubscribeRoom","docSnap","roomData","currentPlayers","playerInRoom","find","p","wind","length","newPlayer","name","score","gameMaster","playersWithoutWind","filter","takenWinds","map","Boolean","availableWinds","w","includes","lastWind","playerToUpdateIndex","findIndex","updatedPlayers","handleWindSelection","playerIndex","toggleDropdown","prevState","canStartGame","every","isPlayerInRoom","some","className","children","fileName","_jsxFileName","lineNumber","columnNumber","icon","md","player","style","minHeight","isOpen","toggle","caret","onClick","disabled","color","_c","$RefreshReg$"],"sources":["/Users/angyi/Documents/GitHub/Mahjong/client/src/pages/GameMasterPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { doc, onSnapshot, updateDoc, arrayUnion, getDoc } from 'firebase/firestore';\nimport { db, auth } from '../firebase-config';\nimport { onAuthStateChanged } from 'firebase/auth';\nimport { Container, Row, Col, Button, Card, CardBody, Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCrown, faSync, faStopCircle, faPlayCircle } from '@fortawesome/free-solid-svg-icons';\n\nconst GameMasterPage = () => {\n    const { roomCode } = useParams();\n    const [players, setPlayers] = useState([]);\n    const [currentUser, setCurrentUser] = useState(null);\n    const [userWind, setUserWind] = useState('');\n    const [dropdownOpen, setDropdownOpen] = useState(false);\n    const [roomExists, setRoomExists] = useState(true);\n\n    const winds = ['East (東)', 'South (南)', 'West (西)', 'North (北)'];\n\n    // Effect to save the last visited room\n    useEffect(() => {\n        if (roomCode) {\n            localStorage.setItem('lastRoomCode', roomCode);\n        }\n    }, [roomCode]);\n\n    useEffect(() => {\n        const unsubscribeAuth = onAuthStateChanged(auth, async (user) => {\n            if (user) {\n                const userDocRef = doc(db, \"users\", user.uid);\n                const userDocSnap = await getDoc(userDocRef);\n                if (userDocSnap.exists()) {\n                    setCurrentUser({ uid: user.uid, ...userDocSnap.data() });\n                } else {\n                    setCurrentUser({ uid: user.uid, username: user.email });\n                }\n            } else {\n                setCurrentUser(null);\n            }\n        });\n        return () => unsubscribeAuth();\n    }, []);\n\n    useEffect(() => {\n        if (!currentUser || !roomCode) return;\n\n        const roomRef = doc(db, 'rooms', roomCode);\n\n        const unsubscribeRoom = onSnapshot(roomRef, (docSnap) => {\n            if (docSnap.exists()) {\n                setRoomExists(true);\n                const roomData = docSnap.data();\n                const currentPlayers = roomData.players || [];\n                setPlayers(currentPlayers);\n\n                const playerInRoom = currentPlayers.find(p => p.uid === currentUser.uid);\n\n                if (playerInRoom) {\n                    setUserWind(playerInRoom.wind);\n                } else if (currentPlayers.length < 4) {\n                    const newPlayer = {\n                        uid: currentUser.uid,\n                        name: currentUser.username,\n                        score: 0,\n                        wind: ''\n                    };\n                    updateDoc(roomRef, {\n                        players: arrayUnion(newPlayer)\n                    });\n                }\n\n                if (currentPlayers.length === 4 && roomData.gameMaster === currentUser.uid) {\n                    const playersWithoutWind = currentPlayers.filter(p => !p.wind);\n                    if (playersWithoutWind.length === 1) {\n                        const takenWinds = currentPlayers.map(p => p.wind).filter(Boolean);\n                        const availableWinds = winds.filter(w => !takenWinds.includes(w));\n                        if (availableWinds.length === 1) {\n                            const lastWind = availableWinds[0];\n                            const playerToUpdateIndex = currentPlayers.findIndex(p => !p.wind);\n                            \n                            const updatedPlayers = [...currentPlayers];\n                            updatedPlayers[playerToUpdateIndex].wind = lastWind;\n                            \n                            updateDoc(roomRef, { players: updatedPlayers });\n                        }\n                    }\n                }\n            } else {\n                setRoomExists(false);\n            }\n        });\n\n        return () => unsubscribeRoom();\n\n    }, [roomCode, currentUser]);\n    \n    const handleWindSelection = async (wind) => {\n        if (!currentUser) return;\n        const roomRef = doc(db, 'rooms', roomCode);\n        const playerIndex = players.findIndex(p => p.uid === currentUser.uid);\n\n        if (playerIndex !== -1) {\n            const updatedPlayers = [...players];\n            updatedPlayers[playerIndex].wind = wind;\n            await updateDoc(roomRef, { players: updatedPlayers });\n            setUserWind(wind);\n        }\n    };\n    \n    const toggleDropdown = () => setDropdownOpen(prevState => !prevState);\n\n    const canStartGame = players.length === 4 && players.every(p => p.wind);\n    const isPlayerInRoom = players.some(p => p.uid === currentUser?.uid);\n    const availableWinds = winds.filter(w => !players.some(p => p.wind === w));\n\n    if (!roomExists) {\n        return (\n            <div className=\"gm-background\">\n                <Container className=\"py-5 text-center\">\n                    <h2>Room Not Found</h2>\n                    <p>The room with code <strong>{roomCode}</strong> does not exist or has been closed.</p>\n                </Container>\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"gm-background\">\n            <Container className=\"py-5\">\n                <h2 className=\"gm-header\"><FontAwesomeIcon icon={faCrown} /> Game Master</h2>\n                <div className=\"room-code-display my-4\">\n                    Room Code: {roomCode}\n                </div>\n\n                <Row>\n                    <Col md={8}>\n                        <h4 className=\"mb-3\">Players in Room</h4>\n                        {players.map(player => (\n                            <Card key={player.uid} className=\"player-card mb-3\">\n                                <CardBody className=\"text-center\">\n                                    <div className=\"player-card-wind\">{player.wind || 'Choosing...'}</div>\n                                    <div className=\"player-card-name\">{player.name}</div>\n                                    <div className=\"player-card-score\">{player.score}</div>\n                                </CardBody>\n                            </Card>\n                        ))}\n                         {players.length < 4 && (\n                            <Card className=\"player-card mb-3\">\n                                <CardBody className=\"text-center d-flex align-items-center justify-content-center\" style={{ minHeight: '110px' }}>\n                                    <p className=\"text-muted\">Waiting for more players...</p>\n                                </CardBody>\n                            </Card>\n                        )}\n                    </Col>\n                    <Col md={4}>\n                        <h4 className=\"mb-3\">Game Controls</h4>\n                        {isPlayerInRoom && !userWind && (\n                            <Dropdown isOpen={dropdownOpen} toggle={toggleDropdown} className=\"w-100 mb-3\">\n                                <DropdownToggle caret>\n                                    Choose Your Wind\n                                </DropdownToggle>\n                                <DropdownMenu>\n                                    {availableWinds.map(wind => (\n                                         <DropdownItem key={wind} onClick={() => handleWindSelection(wind)}>{wind}</DropdownItem>\n                                    ))}\n                                    {availableWinds.length === 0 && <DropdownItem disabled>All winds taken</DropdownItem>}\n                                </DropdownMenu>\n                            </Dropdown>\n                        )}\n                        <Button className=\"w-100 mb-2 gm-btn\" disabled={!canStartGame}>\n                            <FontAwesomeIcon icon={faPlayCircle} /> Start New Round\n                        </Button>\n                        <Button className=\"w-100 mb-2 gm-btn-alt\">\n                            <FontAwesomeIcon icon={faSync} /> Reset All Scores\n                        </Button>\n                        <Button color=\"danger\" className=\"w-100 gm-btn-danger\">\n                            <FontAwesomeIcon icon={faStopCircle} /> End Game\n                        </Button>\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    );\n};\n\nexport default GameMasterPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}