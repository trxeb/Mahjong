{"ast":null,"code":"var _jsxFileName = \"/Users/angyi/Documents/GitHub/Mahjong/client/src/pages/GameMasterPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { doc, onSnapshot, updateDoc, arrayUnion, getDoc } from 'firebase/firestore';\nimport { db, auth } from '../firebase-config';\nimport { onAuthStateChanged } from 'firebase/auth';\nimport { Container, Row, Col, Button, Card, CardBody, Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCrown, faSync, faStopCircle, faPlayCircle } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameMasterPage = () => {\n  _s();\n  const {\n    roomCode\n  } = useParams();\n  const [players, setPlayers] = useState([]);\n  const [currentUser, setCurrentUser] = useState(null);\n  const [userWind, setUserWind] = useState('');\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n  const winds = ['East (東)', 'South (南)', 'West (西)', 'North (北)'];\n  useEffect(() => {\n    const unsubscribeAuth = onAuthStateChanged(auth, async user => {\n      if (user) {\n        const userDocRef = doc(db, \"users\", user.uid);\n        const userDocSnap = await getDoc(userDocRef);\n        if (userDocSnap.exists()) {\n          setCurrentUser({\n            uid: user.uid,\n            ...userDocSnap.data()\n          });\n        } else {\n          // Handle case where user has no profile data\n          setCurrentUser({\n            uid: user.uid,\n            username: user.email\n          });\n        }\n      }\n    });\n    const roomRef = doc(db, 'rooms', roomCode);\n    const unsubscribeRoom = onSnapshot(roomRef, docSnap => {\n      if (docSnap.exists()) {\n        const roomData = docSnap.data();\n        setPlayers(roomData.players || []);\n        // Find the current user in the players list and set their wind\n        const player = roomData.players.find(p => p.uid === (currentUser === null || currentUser === void 0 ? void 0 : currentUser.uid));\n        if (player) {\n          setUserWind(player.wind);\n        }\n      } else {\n        // If room doesn't exist, maybe create it? For now, we assume it's created on \"Create Room\"\n      }\n    });\n    return () => {\n      unsubscribeAuth();\n      unsubscribeRoom();\n    };\n  }, [roomCode, currentUser === null || currentUser === void 0 ? void 0 : currentUser.uid]);\n  const handleJoinRoom = async () => {\n    if (!currentUser) return;\n    const roomRef = doc(db, 'rooms', roomCode);\n    const newPlayer = {\n      uid: currentUser.uid,\n      name: currentUser.username,\n      score: 0,\n      wind: '' // Wind is selected after joining\n    };\n    try {\n      await updateDoc(roomRef, {\n        players: arrayUnion(newPlayer)\n      });\n    } catch (e) {\n      console.error(\"Error joining room: \", e);\n    }\n  };\n  const handleWindSelection = async wind => {\n    if (!currentUser) return;\n    const roomRef = doc(db, 'rooms', roomCode);\n    const playerIndex = players.findIndex(p => p.uid === currentUser.uid);\n    if (playerIndex !== -1) {\n      const updatedPlayers = [...players];\n      updatedPlayers[playerIndex].wind = wind;\n      await updateDoc(roomRef, {\n        players: updatedPlayers\n      });\n      setUserWind(wind);\n    }\n  };\n  const toggleDropdown = () => setDropdownOpen(prevState => !prevState);\n  const canStartGame = players.length === 4 && players.every(p => p.wind);\n  const isPlayerInRoom = players.some(p => p.uid === (currentUser === null || currentUser === void 0 ? void 0 : currentUser.uid));\n  const availableWinds = winds.filter(w => !players.some(p => p.wind === w));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gm-background\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: \"py-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"gm-header\",\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faCrown\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 43\n        }, this), \" Game Master\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"room-code-display my-4\",\n        children: [\"Room Code: \", roomCode]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), !isPlayerInRoom && currentUser && /*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        onClick: handleJoinRoom,\n        className: \"mb-4\",\n        children: \"Join Room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 8,\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mb-3\",\n            children: \"Players in Room\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this), players.map(player => /*#__PURE__*/_jsxDEV(Card, {\n            className: \"player-card mb-3\",\n            children: /*#__PURE__*/_jsxDEV(CardBody, {\n              className: \"text-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"wind-indicator\",\n                children: player.wind || 'No Wind'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"player-name\",\n                children: player.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"player-score\",\n                children: player.score\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 33\n            }, this)\n          }, player.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 29\n          }, this)), players.length < 4 && /*#__PURE__*/_jsxDEV(Card, {\n            className: \"player-card mb-3\",\n            children: /*#__PURE__*/_jsxDEV(CardBody, {\n              className: \"text-center d-flex align-items-center justify-content-center\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-muted\",\n                children: \"Waiting for more players...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 4,\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mb-3\",\n            children: \"Game Controls\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this), isPlayerInRoom && !userWind && /*#__PURE__*/_jsxDEV(Dropdown, {\n            isOpen: dropdownOpen,\n            toggle: toggleDropdown,\n            className: \"w-100 mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(DropdownToggle, {\n              caret: true,\n              children: \"Choose Your Wind\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(DropdownMenu, {\n              children: availableWinds.map(wind => /*#__PURE__*/_jsxDEV(DropdownItem, {\n                onClick: () => handleWindSelection(wind),\n                children: wind\n              }, wind, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 42\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"w-100 mb-2 gm-btn\",\n            disabled: !canStartGame,\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faPlayCircle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 29\n            }, this), \" Start New Round\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"w-100 mb-2 gm-btn-alt\",\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faSync\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 29\n            }, this), \" Reset All Scores\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"danger\",\n            className: \"w-100 gm-btn-danger\",\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faStopCircle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 29\n            }, this), \" End Game\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, this);\n};\n_s(GameMasterPage, \"F9uTTOWgm65RjptFkZhEEqBmaDg=\", false, function () {\n  return [useParams];\n});\n_c = GameMasterPage;\nexport default GameMasterPage;\nvar _c;\n$RefreshReg$(_c, \"GameMasterPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","doc","onSnapshot","updateDoc","arrayUnion","getDoc","db","auth","onAuthStateChanged","Container","Row","Col","Button","Card","CardBody","Dropdown","DropdownToggle","DropdownMenu","DropdownItem","FontAwesomeIcon","faCrown","faSync","faStopCircle","faPlayCircle","jsxDEV","_jsxDEV","GameMasterPage","_s","roomCode","players","setPlayers","currentUser","setCurrentUser","userWind","setUserWind","dropdownOpen","setDropdownOpen","winds","unsubscribeAuth","user","userDocRef","uid","userDocSnap","exists","data","username","email","roomRef","unsubscribeRoom","docSnap","roomData","player","find","p","wind","handleJoinRoom","newPlayer","name","score","e","console","error","handleWindSelection","playerIndex","findIndex","updatedPlayers","toggleDropdown","prevState","canStartGame","length","every","isPlayerInRoom","some","availableWinds","filter","w","className","children","icon","fileName","_jsxFileName","lineNumber","columnNumber","color","onClick","md","map","id","isOpen","toggle","caret","disabled","_c","$RefreshReg$"],"sources":["/Users/angyi/Documents/GitHub/Mahjong/client/src/pages/GameMasterPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { doc, onSnapshot, updateDoc, arrayUnion, getDoc } from 'firebase/firestore';\nimport { db, auth } from '../firebase-config';\nimport { onAuthStateChanged } from 'firebase/auth';\nimport { Container, Row, Col, Button, Card, CardBody, Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCrown, faSync, faStopCircle, faPlayCircle } from '@fortawesome/free-solid-svg-icons';\n\nconst GameMasterPage = () => {\n    const { roomCode } = useParams();\n    const [players, setPlayers] = useState([]);\n    const [currentUser, setCurrentUser] = useState(null);\n    const [userWind, setUserWind] = useState('');\n    const [dropdownOpen, setDropdownOpen] = useState(false);\n\n    const winds = ['East (東)', 'South (南)', 'West (西)', 'North (北)'];\n\n    useEffect(() => {\n        const unsubscribeAuth = onAuthStateChanged(auth, async (user) => {\n            if (user) {\n                const userDocRef = doc(db, \"users\", user.uid);\n                const userDocSnap = await getDoc(userDocRef);\n                if (userDocSnap.exists()) {\n                    setCurrentUser({ uid: user.uid, ...userDocSnap.data() });\n                } else {\n                    // Handle case where user has no profile data\n                    setCurrentUser({ uid: user.uid, username: user.email });\n                }\n            }\n        });\n\n        const roomRef = doc(db, 'rooms', roomCode);\n        const unsubscribeRoom = onSnapshot(roomRef, (docSnap) => {\n            if (docSnap.exists()) {\n                const roomData = docSnap.data();\n                setPlayers(roomData.players || []);\n                // Find the current user in the players list and set their wind\n                const player = roomData.players.find(p => p.uid === currentUser?.uid);\n                if (player) {\n                    setUserWind(player.wind);\n                }\n            } else {\n                // If room doesn't exist, maybe create it? For now, we assume it's created on \"Create Room\"\n            }\n        });\n\n        return () => {\n            unsubscribeAuth();\n            unsubscribeRoom();\n        };\n    }, [roomCode, currentUser?.uid]);\n\n    const handleJoinRoom = async () => {\n        if (!currentUser) return;\n\n        const roomRef = doc(db, 'rooms', roomCode);\n        const newPlayer = {\n            uid: currentUser.uid,\n            name: currentUser.username,\n            score: 0,\n            wind: '' // Wind is selected after joining\n        };\n\n        try {\n            await updateDoc(roomRef, {\n                players: arrayUnion(newPlayer)\n            });\n        } catch (e) {\n            console.error(\"Error joining room: \", e);\n        }\n    };\n    \n    const handleWindSelection = async (wind) => {\n        if (!currentUser) return;\n        const roomRef = doc(db, 'rooms', roomCode);\n        const playerIndex = players.findIndex(p => p.uid === currentUser.uid);\n\n        if (playerIndex !== -1) {\n            const updatedPlayers = [...players];\n            updatedPlayers[playerIndex].wind = wind;\n            await updateDoc(roomRef, { players: updatedPlayers });\n            setUserWind(wind);\n        }\n    };\n    \n    const toggleDropdown = () => setDropdownOpen(prevState => !prevState);\n\n    const canStartGame = players.length === 4 && players.every(p => p.wind);\n    const isPlayerInRoom = players.some(p => p.uid === currentUser?.uid);\n    const availableWinds = winds.filter(w => !players.some(p => p.wind === w));\n\n    return (\n        <div className=\"gm-background\">\n            <Container className=\"py-5\">\n                <h2 className=\"gm-header\"><FontAwesomeIcon icon={faCrown} /> Game Master</h2>\n                <div className=\"room-code-display my-4\">\n                    Room Code: {roomCode}\n                </div>\n                {!isPlayerInRoom && currentUser && (\n                     <Button color=\"primary\" onClick={handleJoinRoom} className=\"mb-4\">Join Room</Button>\n                )}\n\n                <Row>\n                    <Col md={8}>\n                        <h4 className=\"mb-3\">Players in Room</h4>\n                        {players.map(player => (\n                            <Card key={player.id} className=\"player-card mb-3\">\n                                <CardBody className=\"text-center\">\n                                    <div className=\"wind-indicator\">{player.wind || 'No Wind'}</div>\n                                    <div className=\"player-name\">{player.name}</div>\n                                    <div className=\"player-score\">{player.score}</div>\n                                </CardBody>\n                            </Card>\n                        ))}\n                         {players.length < 4 && (\n                            <Card className=\"player-card mb-3\">\n                                <CardBody className=\"text-center d-flex align-items-center justify-content-center\">\n                                    <p className=\"text-muted\">Waiting for more players...</p>\n                                </CardBody>\n                            </Card>\n                        )}\n                    </Col>\n                    <Col md={4}>\n                        <h4 className=\"mb-3\">Game Controls</h4>\n                        {isPlayerInRoom && !userWind && (\n                            <Dropdown isOpen={dropdownOpen} toggle={toggleDropdown} className=\"w-100 mb-2\">\n                                <DropdownToggle caret>\n                                    Choose Your Wind\n                                </DropdownToggle>\n                                <DropdownMenu>\n                                    {availableWinds.map(wind => (\n                                         <DropdownItem key={wind} onClick={() => handleWindSelection(wind)}>{wind}</DropdownItem>\n                                    ))}\n                                </DropdownMenu>\n                            </Dropdown>\n                        )}\n                        <Button className=\"w-100 mb-2 gm-btn\" disabled={!canStartGame}>\n                            <FontAwesomeIcon icon={faPlayCircle} /> Start New Round\n                        </Button>\n                        <Button className=\"w-100 mb-2 gm-btn-alt\">\n                            <FontAwesomeIcon icon={faSync} /> Reset All Scores\n                        </Button>\n                        <Button color=\"danger\" className=\"w-100 gm-btn-danger\">\n                            <FontAwesomeIcon icon={faStopCircle} /> End Game\n                        </Button>\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    );\n};\n\nexport default GameMasterPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}