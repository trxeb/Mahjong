{"ast":null,"code":"var _jsxFileName = \"/Users/angyi/Documents/GitHub/Mahjong/client/src/pages/ScorePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { doc, onSnapshot } from 'firebase/firestore';\nimport { db } from '../firebase-config';\nimport { Container, Row, Col, Card, CardBody } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrophy } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScorePage = () => {\n  _s();\n  const {\n    roomCode\n  } = useParams();\n  const [players, setPlayers] = useState([]);\n  const [roomExists, setRoomExists] = useState(true);\n  const [highestScore, setHighestScore] = useState(-Infinity);\n  const [mostWins, setMostWins] = useState(-1);\n  useEffect(() => {\n    if (!roomCode) return;\n    const roomRef = doc(db, 'rooms', roomCode);\n    const unsubscribe = onSnapshot(roomRef, docSnap => {\n      if (docSnap.exists()) {\n        setRoomExists(true);\n        const roomData = docSnap.data();\n        const currentPlayers = roomData.players || [];\n        setPlayers(currentPlayers);\n        if (currentPlayers.length > 0) {\n          const scores = currentPlayers.map(p => p.score);\n          const maxScore = Math.max(...scores);\n          setHighestScore(maxScore);\n          const wins = currentPlayers.map(p => p.gamesWon || 0);\n          const maxWins = Math.max(...wins);\n          setMostWins(maxWins > 0 ? maxWins : -1);\n        }\n      } else {\n        setRoomExists(false);\n      }\n    });\n    return () => unsubscribe();\n  }, [roomCode]);\n  if (!roomExists) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score-background text-center py-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Room Not Found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"The room with code \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: roomCode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 39\n        }, this), \" does not exist.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"score-background\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      className: \"py-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-center mb-2\",\n        children: [\"Room Code: \", roomCode]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center mb-5\",\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faTrophy\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 50\n        }, this), \" Current Scores\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: players.map(player => /*#__PURE__*/_jsxDEV(Col, {\n          md: 6,\n          lg: 3,\n          className: \"mb-4\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: `player-score-card ${player.score === highestScore ? 'highlight' : ''}`,\n            children: /*#__PURE__*/_jsxDEV(CardBody, {\n              className: \"text-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"wind-indicator\",\n                children: player.wind\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"player-name\",\n                children: player.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"player-score\",\n                children: [player.score > 0 ? '+' : '', player.score]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                className: \"text-muted\",\n                children: [\"Wind: \", player.wind.split(' ')[0], \" | Games Won: \", player.gamesWon || 0, player.gamesWon === mostWins && mostWins !== -1 && /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faTrophy,\n                  className: \"ms-2 text-warning\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 93\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, this)\n        }, player.uid, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n_s(ScorePage, \"qUZiRJ6RXFQ1nVl/glno6VRu8CA=\", false, function () {\n  return [useParams];\n});\n_c = ScorePage;\nexport default ScorePage;\nvar _c;\n$RefreshReg$(_c, \"ScorePage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","doc","onSnapshot","db","Container","Row","Col","Card","CardBody","FontAwesomeIcon","faTrophy","jsxDEV","_jsxDEV","ScorePage","_s","roomCode","players","setPlayers","roomExists","setRoomExists","highestScore","setHighestScore","Infinity","mostWins","setMostWins","roomRef","unsubscribe","docSnap","exists","roomData","data","currentPlayers","length","scores","map","p","score","maxScore","Math","max","wins","gamesWon","maxWins","className","children","fileName","_jsxFileName","lineNumber","columnNumber","icon","player","md","lg","wind","name","split","uid","_c","$RefreshReg$"],"sources":["/Users/angyi/Documents/GitHub/Mahjong/client/src/pages/ScorePage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { doc, onSnapshot } from 'firebase/firestore';\nimport { db } from '../firebase-config';\nimport { Container, Row, Col, Card, CardBody } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrophy } from '@fortawesome/free-solid-svg-icons';\n\nconst ScorePage = () => {\n    const { roomCode } = useParams();\n    const [players, setPlayers] = useState([]);\n    const [roomExists, setRoomExists] = useState(true);\n    const [highestScore, setHighestScore] = useState(-Infinity);\n    const [mostWins, setMostWins] = useState(-1);\n\n    useEffect(() => {\n        if (!roomCode) return;\n        const roomRef = doc(db, 'rooms', roomCode);\n\n        const unsubscribe = onSnapshot(roomRef, (docSnap) => {\n            if (docSnap.exists()) {\n                setRoomExists(true);\n                const roomData = docSnap.data();\n                const currentPlayers = roomData.players || [];\n                setPlayers(currentPlayers);\n\n                if (currentPlayers.length > 0) {\n                    const scores = currentPlayers.map(p => p.score);\n                    const maxScore = Math.max(...scores);\n                    setHighestScore(maxScore);\n                    \n                    const wins = currentPlayers.map(p => p.gamesWon || 0);\n                    const maxWins = Math.max(...wins);\n                    setMostWins(maxWins > 0 ? maxWins : -1);\n                }\n\n            } else {\n                setRoomExists(false);\n            }\n        });\n\n        return () => unsubscribe();\n    }, [roomCode]);\n\n    if (!roomExists) {\n        return (\n            <div className=\"score-background text-center py-5\">\n                <h2>Room Not Found</h2>\n                <p>The room with code <strong>{roomCode}</strong> does not exist.</p>\n            </div>\n        );\n    }\n    \n    return (\n        <div className=\"score-background\">\n            <Container className=\"py-5\">\n                 <h2 className=\"text-center mb-2\">Room Code: {roomCode}</h2>\n                <h1 className=\"text-center mb-5\"><FontAwesomeIcon icon={faTrophy} /> Current Scores</h1>\n                <Row>\n                    {players.map(player => (\n                        <Col md={6} lg={3} key={player.uid} className=\"mb-4\">\n                            <Card className={`player-score-card ${player.score === highestScore ? 'highlight' : ''}`}>\n                                <CardBody className=\"text-center\">\n                                    <div className=\"wind-indicator\">{player.wind}</div>\n                                    <div className=\"player-name\">{player.name}</div>\n                                    <div className=\"player-score\">\n                                        {player.score > 0 ? '+' : ''}{player.score}\n                                    </div>\n                                    <small className=\"text-muted\">\n                                        Wind: {player.wind.split(' ')[0]} | Games Won: {player.gamesWon || 0}\n                                        {player.gamesWon === mostWins && mostWins !== -1 && <FontAwesomeIcon icon={faTrophy} className=\"ms-2 text-warning\" />}\n                                    </small>\n                                </CardBody>\n                            </Card>\n                        </Col>\n                    ))}\n                </Row>\n            </Container>\n        </div>\n    );\n};\n\nexport default ScorePage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}