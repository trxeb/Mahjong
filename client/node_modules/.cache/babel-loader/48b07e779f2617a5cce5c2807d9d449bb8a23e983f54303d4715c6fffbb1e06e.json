{"ast":null,"code":"var _jsxFileName = \"/Users/angyi/Documents/GitHub/Mahjong/client/src/components/FlowerModal.js\";\nimport React from 'react';\nimport { Modal, ModalHeader, ModalBody, Row, Col, Button } from 'reactstrap';\nimport { FLOWER_TILES } from '../constants/mahjong';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FlowerModal = ({\n  isOpen,\n  toggle,\n  onSelect,\n  availableTiles\n}) => {\n  const TileButton = ({\n    tile\n  }) => {\n    const isAvailable = availableTiles.some(available => available.id === tile.id);\n    return /*#__PURE__*/_jsxDEV(Button, {\n      color: \"light\",\n      className: \"w-100 mb-2\",\n      onClick: () => onSelect(tile),\n      disabled: !isAvailable,\n      children: tile.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this);\n  };\n  const TileGroup = ({\n    title,\n    tiles\n  }) => /*#__PURE__*/_jsxDEV(Col, {\n    md: 4,\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      className: \"text-center mb-3\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), tiles.map(tile => /*#__PURE__*/_jsxDEV(TileButton, {\n      tile: tile\n    }, tile.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 32\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: isOpen,\n    toggle: toggle,\n    centered: true,\n    size: \"lg\",\n    children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n      toggle: toggle,\n      children: \"Select a Flower Tile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(TileGroup, {\n          title: \"Seasons\",\n          tiles: FLOWER_TILES.SEASONS\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TileGroup, {\n          title: \"Flowers\",\n          tiles: FLOWER_TILES.FLOWERS\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TileGroup, {\n          title: \"Animals\",\n          tiles: FLOWER_TILES.ANIMALS\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_c = FlowerModal;\nexport default FlowerModal;\nvar _c;\n$RefreshReg$(_c, \"FlowerModal\");","map":{"version":3,"names":["React","Modal","ModalHeader","ModalBody","Row","Col","Button","FLOWER_TILES","jsxDEV","_jsxDEV","FlowerModal","isOpen","toggle","onSelect","availableTiles","TileButton","tile","isAvailable","some","available","id","color","className","onClick","disabled","children","name","fileName","_jsxFileName","lineNumber","columnNumber","TileGroup","title","tiles","md","map","centered","size","SEASONS","FLOWERS","ANIMALS","_c","$RefreshReg$"],"sources":["/Users/angyi/Documents/GitHub/Mahjong/client/src/components/FlowerModal.js"],"sourcesContent":["import React from 'react';\nimport { Modal, ModalHeader, ModalBody, Row, Col, Button } from 'reactstrap';\nimport { FLOWER_TILES } from '../constants/mahjong';\n\nconst FlowerModal = ({ isOpen, toggle, onSelect, availableTiles }) => {\n    \n    const TileButton = ({ tile }) => {\n        const isAvailable = availableTiles.some(available => available.id === tile.id);\n        return (\n            <Button\n                color=\"light\"\n                className=\"w-100 mb-2\"\n                onClick={() => onSelect(tile)}\n                disabled={!isAvailable}\n            >\n                {tile.name}\n            </Button>\n        );\n    };\n\n    const TileGroup = ({ title, tiles }) => (\n        <Col md={4}>\n            <h5 className=\"text-center mb-3\">{title}</h5>\n            {tiles.map(tile => <TileButton key={tile.id} tile={tile} />)}\n        </Col>\n    );\n    \n    return (\n        <Modal isOpen={isOpen} toggle={toggle} centered size=\"lg\">\n            <ModalHeader toggle={toggle}>Select a Flower Tile</ModalHeader>\n            <ModalBody>\n                <Row>\n                    <TileGroup title=\"Seasons\" tiles={FLOWER_TILES.SEASONS} />\n                    <TileGroup title=\"Flowers\" tiles={FLOWER_TILES.FLOWERS} />\n                    <TileGroup title=\"Animals\" tiles={FLOWER_TILES.ANIMALS} />\n                </Row>\n            </ModalBody>\n        </Modal>\n    );\n};\n\nexport default FlowerModal; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}