{"ast":null,"code":"var _jsxFileName = \"/Users/angyi/Documents/GitHub/Mahjong/client/src/pages/RecordsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { doc, onSnapshot, updateDoc, arrayUnion } from 'firebase/firestore';\nimport { db } from '../firebase-config';\nimport { useAuth } from '../hooks/useAuth';\nimport FlowerModal from '../components/FlowerModal';\nimport { Container, Row, Col, Button, Card, CardBody, Input } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUndo, faClipboard, faFan, faCoins, faChartBar, faTrophy, faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RecordsPage = () => {\n  _s();\n  const {\n    roomCode\n  } = useParams();\n  const {\n    user: currentUser\n  } = useAuth();\n  const [players, setPlayers] = useState([]);\n  const [selectedFlowerPlayer, setSelectedFlowerPlayer] = useState('');\n  const [selectedKongType, setSelectedKongType] = useState('Concealed Kong');\n  const [selectedKongTarget, setSelectedKongTarget] = useState('');\n  const [room, setRoom] = useState(null);\n  const [roomExists, setRoomExists] = useState(true);\n  const [highestScore, setHighestScore] = useState(-Infinity);\n  const [mostWins, setMostWins] = useState(-1);\n  const [modalOpen, setModalOpen] = useState(false);\n  useEffect(() => {\n    if (!roomCode) return;\n    const roomRef = doc(db, 'rooms', roomCode);\n    const unsubscribe = onSnapshot(roomRef, docSnap => {\n      if (docSnap.exists()) {\n        setRoomExists(true);\n        const roomData = docSnap.data();\n        setRoom(roomData);\n        const currentPlayers = roomData.players || [];\n        setPlayers(currentPlayers);\n        const otherPlayers = currentPlayers.filter(p => p.uid !== (currentUser === null || currentUser === void 0 ? void 0 : currentUser.uid));\n        if (currentPlayers.length > 0) {\n          if (!selectedFlowerPlayer && otherPlayers.length > 0) {\n            setSelectedFlowerPlayer(otherPlayers[0].uid);\n          }\n          if (!selectedKongTarget && otherPlayers.length > 0) {\n            setSelectedKongTarget(otherPlayers[0].uid);\n          }\n          const scores = currentPlayers.map(p => p.score);\n          setHighestScore(Math.max(...scores));\n          const wins = currentPlayers.map(p => p.gamesWon || 0);\n          const maxWins = Math.max(...wins);\n          setMostWins(maxWins > 0 ? maxWins : -1);\n        }\n      } else {\n        setRoomExists(false);\n      }\n    });\n    return () => unsubscribe();\n  }, [roomCode, currentUser, selectedFlowerPlayer]);\n  const calculateFlowerBonuses = (player, updatedPlayers) => {\n    const playerIndex = updatedPlayers.findIndex(p => p.uid === player.uid);\n    if (playerIndex !== -1) {\n      updatedPlayers[playerIndex].score += 1;\n    }\n    return updatedPlayers;\n  };\n  const handleFlowerSelect = async tile => {\n    setModalOpen(false);\n    if (!currentUser || !room) return;\n    let updatedPlayers = [...room.players];\n    const playerIndex = updatedPlayers.findIndex(p => p.uid === currentUser.uid);\n    if (playerIndex !== -1) {\n      updatedPlayers[playerIndex].flowerTiles = [...updatedPlayers[playerIndex].flowerTiles, tile];\n      const updatedAvailableTiles = room.availableFlowerTiles.filter(t => t.id !== tile.id);\n      updatedPlayers = calculateFlowerBonuses(updatedPlayers[playerIndex], updatedPlayers);\n      const roomRef = doc(db, 'rooms', roomCode);\n      await updateDoc(roomRef, {\n        players: updatedPlayers,\n        availableFlowerTiles: updatedAvailableTiles,\n        history: arrayUnion({\n          type: 'flower_add',\n          actor: currentUser.uid,\n          tile: tile,\n          timestamp: new Date()\n        })\n      });\n    }\n  };\n  const handleRecordFlower = async () => {\n    if (!currentUser || !selectedFlowerPlayer || currentUser.uid === selectedFlowerPlayer) {\n      console.log(\"Invalid flower action: Cannot select yourself.\");\n      return;\n    }\n    const actorIndex = room.players.findIndex(p => p.uid === currentUser.uid);\n    const targetIndex = room.players.findIndex(p => p.uid === selectedFlowerPlayer);\n    if (actorIndex === -1 || targetIndex === -1) return;\n    const updatedPlayers = [...room.players];\n    updatedPlayers[actorIndex].score += 1;\n    updatedPlayers[targetIndex].score -= 1;\n    const roomRef = doc(db, 'rooms', roomCode);\n    await updateDoc(roomRef, {\n      players: updatedPlayers,\n      history: arrayUnion({\n        type: 'flower',\n        actor: currentUser.uid,\n        target: selectedFlowerPlayer,\n        timestamp: new Date()\n      })\n    });\n  };\n  const handleRecordKong = async () => {\n    if (!currentUser) return;\n    const actorIndex = room.players.findIndex(p => p.uid === currentUser.uid);\n    if (actorIndex === -1) return;\n    const updatedPlayers = [...room.players];\n    let historyEntry = {\n      type: 'kong',\n      kongType: selectedKongType,\n      actor: currentUser.uid,\n      timestamp: new Date()\n    };\n    if (selectedKongType === 'Concealed Kong') {\n      updatedPlayers[actorIndex].score += 1;\n    } else {\n      // Melded Kong\n      const targetIndex = room.players.findIndex(p => p.uid === selectedKongTarget);\n      if (targetIndex === -1) return;\n      updatedPlayers[actorIndex].score += 1;\n      updatedPlayers[targetIndex].score -= 1;\n      historyEntry.target = selectedKongTarget;\n    }\n    const roomRef = doc(db, 'rooms', roomCode);\n    await updateDoc(roomRef, {\n      players: updatedPlayers,\n      history: arrayUnion(historyEntry)\n    });\n  };\n  const toggleModal = () => setModalOpen(!modalOpen);\n  if (!roomExists) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"records-background text-center py-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Room Not Found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"The room with code \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: roomCode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 39\n        }, this), \" does not exist.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }, this);\n  }\n  const ActionCard = ({\n    title,\n    children\n  }) => /*#__PURE__*/_jsxDEV(Col, {\n    md: 4,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"action-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"mb-3\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }, this), children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 9\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"records-background\",\n    children: [/*#__PURE__*/_jsxDEV(FlowerModal, {\n      isOpen: modalOpen,\n      toggle: toggleModal,\n      onSelect: handleFlowerSelect,\n      availableTiles: (room === null || room === void 0 ? void 0 : room.availableFlowerTiles) || []\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: \"py-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"records-container p-4 rounded-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faClipboard\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 42\n          }, this), \" Game Records\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"mb-5\",\n          children: [/*#__PURE__*/_jsxDEV(ActionCard, {\n            title: \"\\u80E1 (Hu - Win)\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              className: \"btn-declare-win w-100\",\n              children: \"\\uD83C\\uDF89 Declare Win\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ActionCard, {\n            title: \"\\u82B1 (Hua - Flower)\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              className: \"btn-record-action w-100\",\n              onClick: toggleModal,\n              children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faPlus\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 33\n              }, this), \" Add Flower Tile\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ActionCard, {\n            title: \"\\u69D3 (Gang - Kong)\",\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              type: \"select\",\n              className: \"mb-2\",\n              value: selectedKongType,\n              onChange: e => setSelectedKongType(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Concealed Kong\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Melded Kong\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 30\n            }, this), selectedKongType === 'Melded Kong' && /*#__PURE__*/_jsxDEV(Input, {\n              type: \"select\",\n              className: \"mb-2\",\n              value: selectedKongTarget,\n              onChange: e => setSelectedKongTarget(e.target.value),\n              children: players.filter(p => p.uid !== (currentUser === null || currentUser === void 0 ? void 0 : currentUser.uid)).map(p => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: p.uid,\n                children: [p.wind, \" - \", p.name]\n              }, p.uid, true, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 95\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              className: \"btn-record-action w-100\",\n              onClick: handleRecordKong,\n              children: \"\\u25A0 Record Kong\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n          className: \"my-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"action-section text-md-start\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"mb-3\",\n                children: \"Other Actions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                className: \"btn-record-action\",\n                children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faUndo\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 71\n                }, this), \" Undo Last Action\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-center mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faTrophy\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 54\n          }, this), \" Current Scores\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: players.map(player => /*#__PURE__*/_jsxDEV(Col, {\n            md: 6,\n            className: \"mb-4\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              className: `player-score-card h-100 ${player.score === highestScore ? 'highlight' : ''}`,\n              children: /*#__PURE__*/_jsxDEV(CardBody, {\n                className: \"text-center d-flex flex-column justify-content-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"wind-indicator\",\n                  children: player.wind\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"player-name mt-2\",\n                  children: player.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"player-score my-1\",\n                  children: [player.score > 0 ? '+' : '', player.score]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                  className: \"text-muted mt-auto\",\n                  children: [\"Wind: \", player.wind.split(' ')[0], \" | Games Won: \", player.gamesWon || 0, player.gamesWon === mostWins && mostWins !== -1 && /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                    icon: faTrophy,\n                    className: \"ms-2 text-warning\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 233,\n                    columnNumber: 97\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 33\n            }, this)\n          }, player.uid, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 9\n  }, this);\n};\n_s(RecordsPage, \"0is3vjoLupSQkyMcdZUfqUHI06Y=\", false, function () {\n  return [useParams, useAuth];\n});\n_c = RecordsPage;\nexport default RecordsPage;\nvar _c;\n$RefreshReg$(_c, \"RecordsPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","Link","doc","onSnapshot","updateDoc","arrayUnion","db","useAuth","FlowerModal","Container","Row","Col","Button","Card","CardBody","Input","FontAwesomeIcon","faUndo","faClipboard","faFan","faCoins","faChartBar","faTrophy","faPlus","jsxDEV","_jsxDEV","RecordsPage","_s","roomCode","user","currentUser","players","setPlayers","selectedFlowerPlayer","setSelectedFlowerPlayer","selectedKongType","setSelectedKongType","selectedKongTarget","setSelectedKongTarget","room","setRoom","roomExists","setRoomExists","highestScore","setHighestScore","Infinity","mostWins","setMostWins","modalOpen","setModalOpen","roomRef","unsubscribe","docSnap","exists","roomData","data","currentPlayers","otherPlayers","filter","p","uid","length","scores","map","score","Math","max","wins","gamesWon","maxWins","calculateFlowerBonuses","player","updatedPlayers","playerIndex","findIndex","handleFlowerSelect","tile","flowerTiles","updatedAvailableTiles","availableFlowerTiles","t","id","history","type","actor","timestamp","Date","handleRecordFlower","console","log","actorIndex","targetIndex","target","handleRecordKong","historyEntry","kongType","toggleModal","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ActionCard","title","md","isOpen","toggle","onSelect","availableTiles","icon","onClick","value","onChange","e","wind","name","split","_c","$RefreshReg$"],"sources":["/Users/angyi/Documents/GitHub/Mahjong/client/src/pages/RecordsPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { doc, onSnapshot, updateDoc, arrayUnion } from 'firebase/firestore';\nimport { db } from '../firebase-config';\nimport { useAuth } from '../hooks/useAuth';\nimport FlowerModal from '../components/FlowerModal';\nimport { Container, Row, Col, Button, Card, CardBody, Input } from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUndo, faClipboard, faFan, faCoins, faChartBar, faTrophy, faPlus } from '@fortawesome/free-solid-svg-icons';\n\nconst RecordsPage = () => {\n    const { roomCode } = useParams();\n    const { user: currentUser } = useAuth();\n    const [players, setPlayers] = useState([]);\n    const [selectedFlowerPlayer, setSelectedFlowerPlayer] = useState('');\n    const [selectedKongType, setSelectedKongType] = useState('Concealed Kong');\n    const [selectedKongTarget, setSelectedKongTarget] = useState('');\n    const [room, setRoom] = useState(null);\n    const [roomExists, setRoomExists] = useState(true);\n    const [highestScore, setHighestScore] = useState(-Infinity);\n    const [mostWins, setMostWins] = useState(-1);\n    const [modalOpen, setModalOpen] = useState(false);\n\n    useEffect(() => {\n        if (!roomCode) return;\n        const roomRef = doc(db, 'rooms', roomCode);\n\n        const unsubscribe = onSnapshot(roomRef, (docSnap) => {\n            if (docSnap.exists()) {\n                setRoomExists(true);\n                const roomData = docSnap.data();\n                setRoom(roomData);\n                const currentPlayers = roomData.players || [];\n                setPlayers(currentPlayers);\n\n                const otherPlayers = currentPlayers.filter(p => p.uid !== currentUser?.uid);\n                if (currentPlayers.length > 0) {\n                    if (!selectedFlowerPlayer && otherPlayers.length > 0) {\n                        setSelectedFlowerPlayer(otherPlayers[0].uid);\n                    }\n                    if (!selectedKongTarget && otherPlayers.length > 0) {\n                        setSelectedKongTarget(otherPlayers[0].uid);\n                    }\n                    \n                    const scores = currentPlayers.map(p => p.score);\n                    setHighestScore(Math.max(...scores));\n                    \n                    const wins = currentPlayers.map(p => p.gamesWon || 0);\n                    const maxWins = Math.max(...wins);\n                    setMostWins(maxWins > 0 ? maxWins : -1);\n                }\n            } else {\n                setRoomExists(false);\n            }\n        });\n\n        return () => unsubscribe();\n    }, [roomCode, currentUser, selectedFlowerPlayer]);\n\n    const calculateFlowerBonuses = (player, updatedPlayers) => {\n        const playerIndex = updatedPlayers.findIndex(p => p.uid === player.uid);\n        if(playerIndex !== -1) {\n            updatedPlayers[playerIndex].score += 1;\n        }\n        return updatedPlayers;\n    }\n\n    const handleFlowerSelect = async (tile) => {\n        setModalOpen(false);\n        if (!currentUser || !room) return;\n\n        let updatedPlayers = [...room.players];\n        const playerIndex = updatedPlayers.findIndex(p => p.uid === currentUser.uid);\n\n        if (playerIndex !== -1) {\n            updatedPlayers[playerIndex].flowerTiles = [...updatedPlayers[playerIndex].flowerTiles, tile];\n            \n            const updatedAvailableTiles = room.availableFlowerTiles.filter(t => t.id !== tile.id);\n\n            updatedPlayers = calculateFlowerBonuses(updatedPlayers[playerIndex], updatedPlayers);\n\n            const roomRef = doc(db, 'rooms', roomCode);\n            await updateDoc(roomRef, {\n                players: updatedPlayers,\n                availableFlowerTiles: updatedAvailableTiles,\n                history: arrayUnion({\n                    type: 'flower_add',\n                    actor: currentUser.uid,\n                    tile: tile,\n                    timestamp: new Date(),\n                })\n            });\n        }\n    };\n\n    const handleRecordFlower = async () => {\n        if (!currentUser || !selectedFlowerPlayer || currentUser.uid === selectedFlowerPlayer) {\n            console.log(\"Invalid flower action: Cannot select yourself.\");\n            return;\n        }\n\n        const actorIndex = room.players.findIndex(p => p.uid === currentUser.uid);\n        const targetIndex = room.players.findIndex(p => p.uid === selectedFlowerPlayer);\n\n        if (actorIndex === -1 || targetIndex === -1) return;\n\n        const updatedPlayers = [...room.players];\n        updatedPlayers[actorIndex].score += 1;\n        updatedPlayers[targetIndex].score -= 1;\n\n        const roomRef = doc(db, 'rooms', roomCode);\n        await updateDoc(roomRef, {\n            players: updatedPlayers,\n            history: arrayUnion({\n                type: 'flower',\n                actor: currentUser.uid,\n                target: selectedFlowerPlayer,\n                timestamp: new Date(),\n            })\n        });\n    };\n\n    const handleRecordKong = async () => {\n        if (!currentUser) return;\n\n        const actorIndex = room.players.findIndex(p => p.uid === currentUser.uid);\n        if (actorIndex === -1) return;\n        \n        const updatedPlayers = [...room.players];\n        let historyEntry = {\n            type: 'kong',\n            kongType: selectedKongType,\n            actor: currentUser.uid,\n            timestamp: new Date(),\n        };\n\n        if (selectedKongType === 'Concealed Kong') {\n            updatedPlayers[actorIndex].score += 1;\n        } else { // Melded Kong\n            const targetIndex = room.players.findIndex(p => p.uid === selectedKongTarget);\n            if (targetIndex === -1) return;\n            \n            updatedPlayers[actorIndex].score += 1;\n            updatedPlayers[targetIndex].score -= 1;\n            historyEntry.target = selectedKongTarget;\n        }\n\n        const roomRef = doc(db, 'rooms', roomCode);\n        await updateDoc(roomRef, {\n            players: updatedPlayers,\n            history: arrayUnion(historyEntry)\n        });\n    };\n\n    const toggleModal = () => setModalOpen(!modalOpen);\n\n    if (!roomExists) {\n        return (\n            <div className=\"records-background text-center py-5\">\n                <h2>Room Not Found</h2>\n                <p>The room with code <strong>{roomCode}</strong> does not exist.</p>\n            </div>\n        );\n    }\n\n    const ActionCard = ({ title, children }) => (\n        <Col md={4}>\n            <div className=\"action-section\">\n                <h5 className=\"mb-3\">{title}</h5>\n                {children}\n            </div>\n        </Col>\n    );\n\n    return (\n        <div className=\"records-background\">\n            <FlowerModal\n                isOpen={modalOpen}\n                toggle={toggleModal}\n                onSelect={handleFlowerSelect}\n                availableTiles={room?.availableFlowerTiles || []}\n            />\n            <Container className=\"py-4\">\n                <div className=\"records-container p-4 rounded-4\">\n                    <h2 className=\"mb-4\"><FontAwesomeIcon icon={faClipboard} /> Game Records</h2>\n                    <Row className=\"mb-5\">\n                        <ActionCard title=\"胡 (Hu - Win)\">\n                            <Button className=\"btn-declare-win w-100\">🎉 Declare Win</Button>\n                        </ActionCard>\n                        <ActionCard title=\"花 (Hua - Flower)\">\n                            <Button className=\"btn-record-action w-100\" onClick={toggleModal}>\n                                <FontAwesomeIcon icon={faPlus} /> Add Flower Tile\n                            </Button>\n                        </ActionCard>\n                        <ActionCard title=\"槓 (Gang - Kong)\">\n                             <Input type=\"select\" className=\"mb-2\" value={selectedKongType} onChange={e => setSelectedKongType(e.target.value)}>\n                                <option>Concealed Kong</option>\n                                <option>Melded Kong</option>\n                            </Input>\n                            {selectedKongType === 'Melded Kong' && (\n                                <Input type=\"select\" className=\"mb-2\" value={selectedKongTarget} onChange={e => setSelectedKongTarget(e.target.value)}>\n                                    {players.filter(p => p.uid !== currentUser?.uid).map(p => <option key={p.uid} value={p.uid}>{p.wind} - {p.name}</option>)}\n                                 </Input>\n                            )}\n                            <Button className=\"btn-record-action w-100\" onClick={handleRecordKong}>■ Record Kong</Button>\n                        </ActionCard>\n                    </Row>\n                    \n                    <hr className=\"my-4\" />\n\n                    <Row>\n                        <Col>\n                            <div className=\"action-section text-md-start\">\n                                <h5 className=\"mb-3\">Other Actions</h5>\n                                <Button className=\"btn-record-action\"><FontAwesomeIcon icon={faUndo} /> Undo Last Action</Button>\n                            </div>\n                        </Col>\n                    </Row>\n                </div>\n\n                <div className=\"mt-5\">\n                    <h2 className=\"text-center mb-4\"><FontAwesomeIcon icon={faTrophy} /> Current Scores</h2>\n                    <Row>\n                        {players.map(player => (\n                            <Col md={6} key={player.uid} className=\"mb-4\">\n                                <Card className={`player-score-card h-100 ${player.score === highestScore ? 'highlight' : ''}`}>\n                                    <CardBody className=\"text-center d-flex flex-column justify-content-center\">\n                                        <div className=\"wind-indicator\">{player.wind}</div>\n                                        <div className=\"player-name mt-2\">{player.name}</div>\n                                        <div className=\"player-score my-1\">{player.score > 0 ? '+' : ''}{player.score}</div>\n                                        <small className=\"text-muted mt-auto\">\n                                            Wind: {player.wind.split(' ')[0]} | Games Won: {player.gamesWon || 0}\n                                            {player.gamesWon === mostWins && mostWins !== -1 && <FontAwesomeIcon icon={faTrophy} className=\"ms-2 text-warning\" />}\n                                        </small>\n                                    </CardBody>\n                                </Card>\n                            </Col>\n                        ))}\n                    </Row>\n                </div>\n            </Container>\n        </div>\n    );\n};\n\nexport default RecordsPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}